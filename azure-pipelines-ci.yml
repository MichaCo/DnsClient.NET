name: '$(Date:yyyyMMdd)$(Rev:.r)'

trigger:
- dev

pool:
  vmImage: 'windows-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  # versionSuffix: 'beta-$(Build.BuildNumber)'

steps:
# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'restore'
#     projects: '**/*.csproj'
#     feedsToUse: 'select'
#     verbosityRestore: Minimal
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: |
      src/**/*.csproj
#      test/DnsClient.Tests/*.csproj
    configuration: '$(buildConfiguration)'

# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'build'
#     projects: '**/*.csproj'
#     arguments: '-c $(buildConfiguration) --no-restore'

# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'test'
#     projects: 'test/DnsClient.Tests/*.csproj'
#     publishTestResults: true
#     arguments: '-c $(buildConfiguration) --no-build --no-restore'
    
- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: 'src/DnsClient/*.csproj'
    includesymbols: false
    versioningScheme: 'off'
    verbosityPack: Minimal
    packDirectory: '$(Build.ArtifactStagingDirectory)\release'
    configuration: '$(buildConfiguration)'

# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'pack'
#     packagesToPack: 'src/DnsClient/*.csproj'
#     includesymbols: false
#     versioningScheme: 'off'
#     verbosityPack: Minimal
#     packDirectory: '$(Build.ArtifactStagingDirectory)\beta'
#     configuration: '$(buildConfiguration)'
#     noCache: true
#     arguments: '--version-suffix beta-$(Build.BuildNumber)'

- script: 'dotnet pack --no-build --no-restore --version-suffix beta-$(Build.BuildNumber) -v normal -o $(Build.ArtifactStagingDirectory)\beta'

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(Build.ArtifactStagingDirectory)/beta' 
#     TargetPath: 
#     artifactName: 'beta'

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(Build.ArtifactStagingDirectory)/release' 
#     artifactName: 'release'